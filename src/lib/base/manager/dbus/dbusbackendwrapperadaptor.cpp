/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a manager/dbus/dbusbackendwrapperadaptor -i dbusbackendwrapper.h -l PT2::DBusBackendWrapper common/dbus/backend.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "manager/dbus/dbusbackendwrapperadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class Pt2Adaptor
 */

Pt2Adaptor::Pt2Adaptor(PT2::DBusBackendWrapper *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

Pt2Adaptor::~Pt2Adaptor()
{
    // destructor
}

void Pt2Adaptor::registerBackendProgress(int progress)
{
    // handle method call org.SfietKonstantin.pt2.registerBackendProgress
    parent()->registerBackendProgress(progress);
}

void Pt2Adaptor::registerBackendReady(const QStringList &capabilities, const QString &copyright)
{
    // handle method call org.SfietKonstantin.pt2.registerBackendReady
    parent()->registerBackendReady(capabilities, copyright);
}

void Pt2Adaptor::registerBackendStart()
{
    // handle method call org.SfietKonstantin.pt2.registerBackendStart
    parent()->registerBackendStart();
}

void Pt2Adaptor::registerError(const QString &request, const QString &errorId, const QString &error)
{
    // handle method call org.SfietKonstantin.pt2.registerError
    parent()->registerError(request, errorId, error);
}

