<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
    <interface name="org.SfietKonstantin.publictransportation">
        <!-- Method for registration -->
        <method name="registerBackend">
            <arg name="capabilities" type="as" direction="in"/>
        </method>

        <!-- Method used to transmit that something wrong happened -->
        <method name="registerError">
            <arg name="request" type="s" direction="in" />
            <arg name="error" type="s" direction="in" />
        </method>

        <!-- Copyright -->
        <signal name="copyrightRequested">
            <arg name="request" type="s" direction="out" />
        </signal>
        <method name="registerCopyright">
            <arg name="request" type="s" direction="in" />,
            <arg name="copyright" type="s" direction="in" />,
        </method>

        <!-- Autocompletion for station search -->
        <signal name="suggestStationsRequested">
            <arg name="request" type="s" direction="out" />
            <arg name="partialStation" type="s" direction="out" />
        </signal>
        <method name="registerSuggestedStations">
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1"
                        value="const QList&lt;PublicTransportation::Station&gt; &amp;"/>
            <arg name="request" type="s" direction="in" />,
            <arg name="suggestedStations" type="a(a{sv}sa{sv})" direction="in" />
        </method>

        <!-- All journeys from a station -->
        <signal name="journeysFromStationRequested">
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1"
                        value="const PublicTransportation::Station &amp;"/>
            <arg name="request" type="s" direction="out" />
            <arg name="station" type="(a{sv}sa{sv})" direction="out" />
            <arg name="limit" type="i" direction="out" />
        </signal>
        <method name="registerJourneysFromStation">
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1"
                        value="const QList&lt;PublicTransportation::InfoJourneys&gt; &amp;"/>
            <arg name="request" type="s" direction="in" />
            <arg name="infoJourneys" type="a((a{sv}sa{sv})(a{sv}sa{sv})a((a{sv}sa{sv})(a{sv}sa{sv})))"
                 direction="in" />
        </method>

        <!-- Waiting time for a journey -->
        <signal name="waitingTimeRequested">
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="const PublicTransportation::Company &amp;"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="const PublicTransportation::Line &amp;"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In3" value="const PublicTransportation::Journey &amp;"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In4" value="const PublicTransportation::Station &amp;"/>
            <arg name="request" type="s" direction="out" />
            <arg name="company" type="(a{sv}sa{sv})" direction="out" />
            <arg name="line" type="(a{sv}sa{sv})" direction="out" />
            <arg name="journey" type="(a{sv}sa{sv})" direction="out" />
            <arg name="station" type="(a{sv}sa{sv})" direction="out" />
        </signal>
        <method name="registerWaitingTime">
            <annotation name="org.qtproject.QtDBus.QtTypeName.In1"
                        value="const QList&lt;PublicTransportation::WaitingTime&gt; &amp;"/>
            <arg name="request" type="s" direction="in" />
            <arg name="waitingTimeList" type="a(ia{sv})" direction="in" />
        </method>
    </interface>
</node>
