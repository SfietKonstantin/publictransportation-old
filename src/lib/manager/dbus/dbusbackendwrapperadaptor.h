/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a manager/dbus/dbusbackendwrapperadaptor -i dbusbackendwrapper.h -l PublicTransportation::DBusBackendWrapper common/dbus/backend.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DBUSBACKENDWRAPPERADAPTOR_H_1349826035
#define DBUSBACKENDWRAPPERADAPTOR_H_1349826035

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "dbusbackendwrapper.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.SfietKonstantin.publictransportation
 */
class PublictransportationAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.SfietKonstantin.publictransportation")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.SfietKonstantin.publictransportation\">\n"
"    <signal name=\"listCompaniesRequested\"/>\n"
"    <signal name=\"listLinesRequested\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"    </signal>\n"
"    <signal name=\"listJourneysRequested\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const PublicTransportation::Line &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"line\"/>\n"
"    </signal>\n"
"    <signal name=\"listStationsRequested\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const PublicTransportation::Line &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <annotation value=\"const PublicTransportation::Journey &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"line\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"journey\"/>\n"
"    </signal>\n"
"    <signal name=\"getWaitingTimeRequested\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const PublicTransportation::Line &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <annotation value=\"const PublicTransportation::Journey &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"      <annotation value=\"const PublicTransportation::Station &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In3\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"line\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"journey\"/>\n"
"      <arg direction=\"out\" type=\"(a{sv}sa{sv})\" name=\"station\"/>\n"
"    </signal>\n"
"    <method name=\"registerBackend\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"capabilities\"/>\n"
"    </method>\n"
"    <method name=\"registerListedCompanies\">\n"
"      <annotation value=\"const QList&lt;PublicTransportation::Company> &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"a(a{sv}sa{sv})\" name=\"companies\"/>\n"
"    </method>\n"
"    <method name=\"registerListedLines\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const QList&lt;PublicTransportation::Line> &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"in\" type=\"a(a{sv}sa{sv})\" name=\"lines\"/>\n"
"    </method>\n"
"    <method name=\"registerListedJourneys\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const PublicTransportation::Line &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <annotation value=\"const QList&lt;PublicTransportation::Journey> &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"line\"/>\n"
"      <arg direction=\"in\" type=\"a(a{sv}sa{sv})\" name=\"journeys\"/>\n"
"    </method>\n"
"    <method name=\"registerListedStations\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const PublicTransportation::Line &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <annotation value=\"const PublicTransportation::Journey &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"      <annotation value=\"const QList&lt;PublicTransportation::Station> &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In3\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"line\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"journey\"/>\n"
"      <arg direction=\"in\" type=\"a(a{sv}sa{sv})\" name=\"stations\"/>\n"
"    </method>\n"
"    <method name=\"registerWaitingTime\">\n"
"      <annotation value=\"const PublicTransportation::Company &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <annotation value=\"const PublicTransportation::Line &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <annotation value=\"const PublicTransportation::Journey &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"      <annotation value=\"const PublicTransportation::Station &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In3\"/>\n"
"      <annotation value=\"const QList&lt;PublicTransportation::WaitingTime> &amp;\" name=\"org.qtproject.QtDBus.QtTypeName.In4\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"company\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"line\"/>\n"
"      <arg direction=\"in\" type=\"(a{sv}sa{sv})\" name=\"journey\"/>\n"
"      <arg direction=\"in\" type=\"a(a{sv}sa{sv})\" name=\"station\"/>\n"
"      <arg direction=\"in\" type=\"a(ia{sv})\" name=\"waitingTime\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    PublictransportationAdaptor(PublicTransportation::DBusBackendWrapper *parent);
    virtual ~PublictransportationAdaptor();

    inline PublicTransportation::DBusBackendWrapper *parent() const
    { return static_cast<PublicTransportation::DBusBackendWrapper *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void registerBackend(const QStringList &capabilities);
    void registerListedCompanies(const QList<PublicTransportation::Company> & companies);
    void registerListedJourneys(const PublicTransportation::Company & company, const PublicTransportation::Line & line, const QList<PublicTransportation::Journey> & journeys);
    void registerListedLines(const PublicTransportation::Company & company, const QList<PublicTransportation::Line> & lines);
    void registerListedStations(const PublicTransportation::Company & company, const PublicTransportation::Line & line, const PublicTransportation::Journey & journey, const QList<PublicTransportation::Station> & stations);
    void registerWaitingTime(const PublicTransportation::Company & company, const PublicTransportation::Line & line, const PublicTransportation::Journey & journey, const PublicTransportation::Station & station, const QList<PublicTransportation::WaitingTime> & waitingTime);
Q_SIGNALS: // SIGNALS
    void getWaitingTimeRequested(const PublicTransportation::Company & company, const PublicTransportation::Line & line, const PublicTransportation::Journey & journey, const PublicTransportation::Station & station);
    void listCompaniesRequested();
    void listJourneysRequested(const PublicTransportation::Company & company, const PublicTransportation::Line & line);
    void listLinesRequested(const PublicTransportation::Company & company);
    void listStationsRequested(const PublicTransportation::Company & company, const PublicTransportation::Line & line, const PublicTransportation::Journey & journey);
};

#endif
